<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loanscrefia.system.batch.repository.BatchRepository">

	<!-- 모집인 엑셀 업로드 후 1개월동안 처리상태가 미요청 + 모집인상태가 승인전인 경우 -> 모집인 데이터 및 모집인 관련 첨부파일 삭제 -->
    <select id="selectExcelUploadUserAndFileDelete" resultType="user">
		SELECT
			 MASTER_SEQ 
		FROM TB_LC_MAS01
		WHERE PL_STAT 	= '1'	-- 처리상태 	: 미요청
		AND PL_REG_STAT = '1'	-- 모집인상태 	: 승인전
		AND TO_CHAR(REG_TIMESTAMP + INTERVAL '1 month', 'YYYYMMDD') <![CDATA[>=]]> TO_CHAR(NOW(), 'YYYYMMDD')
    </select>
    
   	<!-- 마지막로그인일시 기준 3개월 지난 회원 리스트 -->
   	<select id="selectInactiveUser" parameterType="users" resultType="users">
   		SELECT
   			USER_SEQ
   		FROM
   			tb_lc_users
   		WHERE
   			(last_login_dt + '3 month'::interval) <![CDATA[<=]]> now()
   	</select>
   	
    <select id="selectReqBatchList" resultType="recreg">
		SELECT
			 MASTER_SEQ 
		FROM TB_LC_MAS01
		WHERE PL_STAT 	= '9'	
		AND PL_REGIST_NO IS NULL
    </select>
    
    
    <select id="selectBatchList" parameterType="batch" resultType="batch">
    	SELECT
    		*
    	FROM
    		tb_lc_schedule
    	WHERE schedule_name = #{scheduleName}
    	AND status in ('01', '03')
    </select>
    
    <!-- 스케줄러 테이블 상태변경 --> 
    <update id="updateSchedule" parameterType="batch" >
		update tb_lc_schedule
		set
			status = #{status}
			<if test="error != null and error != ''">
				, error = #{error}
			</if>
			, upd_seq = 0
			, upd_timestamp = NOW()
		where schedule_seq = #{scheduleSeq}
    </update>
    
    
    <!-- 가등록번호 update --> 
    <update id="updatePreLcNum" parameterType="newApply" >
		update tb_lc_mas01
		set
			pre_lc_num 		= #{preLcNum}
			, pl_regist_no	= #{plRegistNo}
			, con_num		= #{conNum}
			, upd_timestamp = NOW()
			, upd_seq 		= 0
		where
			master_seq = #{masterSeq}
    </update>
    
    <!-- 배치 시작 이력 저장 -->
    <select id="insertScheduleHist" parameterType="batch" resultType="int">
		INSERT INTO tb_lc_schedule_hist
		(
			schedule_name
			, req_cnt
			, start_time
			<if test="property01 != null and property01 != ''">
				, property01
			</if>
			<if test="property02 != null and property02 != ''">
				, property02
			</if>
			<if test="property03 != null and property03 != ''">
				, property03
			</if>
			<if test="property04 != null and property04 != ''">
				, property04
			</if>
			<if test="property05 != null and property05 != ''">
				, property05
			</if>
			, reg_seq
			, reg_timestamp
		)
		VALUES(
			#{scheduleName}
			, #{reqCnt}
			, NOW()
			<if test="property01 != null and property01 != ''">
				, #{property01}
			</if>
			<if test="property02 != null and property02 != ''">
				, #{property02}
			</if>
			<if test="property03 != null and property03 != ''">
				, #{property03}
			</if>
			<if test="property04 != null and property04 != ''">
				, #{property04}
			</if>
			<if test="property05 != null and property05 != ''">
				, #{property05}
			</if>
			, 0
			, NOW()
		)
		RETURNING schedule_hist_seq AS scheduleHistSeq
    </select>
   	
    <!-- 배치 종료 이력 저장 --> 
    <update id="updateScheduleHist" parameterType="batch" >
		UPDATE tb_lc_schedule_hist
		SET
			success_cnt			= #{successCnt}
			, end_time			= NOW()
			<if test="property01 != null and property01 != ''">
				, property01	= #{property01}
			</if>
			<if test="property02 != null and property02 != ''">
				, property02	= #{property02}
			</if>
			<if test="property03 != null and property03 != ''">
				, property03	= #{property03}
			</if>
			<if test="property04 != null and property04 != ''">
				, property04	= #{property04}
			</if>
			<if test="property05 != null and property05 != ''">
				, property05	= #{property05}
			</if>
			, upd_seq			= 0
			, upd_timestamp		= NOW()
		WHERE
			schedule_name = #{scheduleName}
		AND schedule_hist_seq = #{scheduleHistSeq}
    </update>
    
</mapper>